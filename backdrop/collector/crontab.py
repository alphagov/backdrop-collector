

class ParseError(StandardError):
    pass


def generate_crontab(app_name, current_crontab, job_path, path_to_app,
                     path_to_python):
    """Returns a crontab with jobs from job path

    It replaces jobs previously generated by this function
    It preserves jobs not generated by this function
    """
    job_template = '{schedule} {python} {app_path}/collector.py ' \
                   '-q {app_path}/{query} -c {app_path}/{config} ' \
                   '# {app_name}'

    app_comment = "# %s" % app_name
    crontab = [
        line.strip() for line in current_crontab if app_comment not in line
    ]
    with open(job_path) as jobs:
        try:
            for job in jobs:
                schedule, query, config = job.strip().split(",")

                cronjob = job_template.format(
                    schedule=schedule,
                    python=path_to_python,
                    app_path=path_to_app,
                    query=query,
                    config=config,
                    app_name=app_name
                )

                crontab.append(cronjob)
        except ValueError as e:
            raise ParseError(str(e))

    return crontab
